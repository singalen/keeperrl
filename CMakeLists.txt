project(keeperrl)

cmake_minimum_required(VERSION 3.13)
set (CMAKE_MODULE_PATH  ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake")

find_package(SDL2 REQUIRED)
find_package(SDL2_image REQUIRED)
find_package(OpenAl REQUIRED)
find_package(Vorbis REQUIRED)
find_package(VorbisFile REQUIRED)
find_package(Curl REQUIRED)

find_package(Boost COMPONENTS thread chrono REQUIRED)

set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)

find_package(OpenGL REQUIRED)
find_package(zlib REQUIRED)

include(cotire)

set(SOURCE_FILES
        adventurer_creature_info.h
        animation.cpp
        animation.h
        animation_id.cpp
        animation_id.h
        attack.h
        attack_behaviour.h
        attack_level.h
        attack_trigger.h
        attack_type.h
        attr_type.cpp
        attr_type.h
        audio_device.cpp
        audio_device.h
        avatar_info.cpp
        avatar_info.h
        avatar_menu_option.h
        battle_test.cpp
        battle_test.h
        best_attack.cpp
        best_attack.h
        body.cpp
        body.h
        body_part.cpp
        body_part.h
        bucket_map.cpp
        bucket_map.h
        build_info.cpp
        build_info.h
        call_cache.h
        campaign.cpp
        campaign.h
        campaign_builder.cpp
        campaign_builder.h
        campaign_type.h
        clock.cpp
        clock.h
        collective.cpp
        collective.h
        collective_attack.cpp
        collective_attack.h
        collective_builder.cpp
        collective_builder.h
        collective_config.cpp
        collective_config.h
        collective_control.cpp
        collective_control.h
        collective_name.h
        collective_teams.cpp
        collective_teams.h
        collective_warning.cpp
        collective_warning.h
        color.cpp
        color.h
        conquer_condition.h
        construction_map.cpp
        construction_map.h
        container_helpers.h
        container_range.h
        content_id.cpp
        content_id.h
        content_factory.cpp
        content_factory.h
        controller.cpp
        controller.h
        corpse_info.h
        cost_info.cpp
        cost_info.h
        creature.cpp
        creature.h
        creature_action.cpp
        creature_action.h
        creature_attributes.cpp
        creature_attributes.h
        creature_debt.cpp
        creature_debt.h
        creature_experience_info.cpp
        creature_experience_info.h
        creature_factory.cpp
        creature_factory.h
        creature_group.cpp
        creature_group.h
        creature_inventory.h
        creature_list.cpp
        creature_list.h
        creature_name.cpp
        creature_name.h
        creature_status.cpp
        creature_status.h
        creature_view.h
        debug.cpp
        debug.h
        destroy_action.cpp
        destroy_action.h
        directory_path.cpp
        directory_path.h
        drag_and_drop.cpp
        drag_and_drop.h
        draw_line.cpp
        draw_line.h
        dummy_view.h
        dungeon_level.cpp
        dungeon_level.h
        effect.cpp
        effect.h
        encyclopedia.cpp
        encyclopedia.h
        enemy_factory.cpp
        enemy_factory.h
        enemy_info.h
        entity_map.cpp
        entity_map.h
        entity_set.cpp
        entity_set.h
        enum_variant.h
        enums.h
        equipment.cpp
        equipment.h
        event_generator.cpp
        event_generator.h
        event_listener.h
        exit_info.h
        experience_type.cpp
        experience_type.h
        external_enemies.cpp
        external_enemies.h
        field_of_view.cpp
        field_of_view.h
        file_path.cpp
        file_path.h
        file_sharing.cpp
        file_sharing.h
        fire.cpp
        fire.h
        fontstash.cpp
        fontstash.h
        fps_counter.cpp
        fps_counter.h
        framebuffer.cpp
        framebuffer.h
        furniture.cpp
        furniture.h
        furniture_array.cpp
        furniture_array.h
        furniture_click.cpp
        furniture_click.h
        furniture_dropped_items.cpp
        furniture_dropped_items.h
        furniture_entry.cpp
        furniture_entry.h
        furniture_factory.cpp
        furniture_factory.h
        furniture_layer.h
        furniture_list.cpp
        furniture_list.h
        furniture_list_id.h
        furniture_on_built.cpp
        furniture_on_built.h
        furniture_tick.cpp
        furniture_tick.h
        furniture_type.h
        furniture_usage.cpp
        furniture_usage.h
        fx_base.h
        fx_color.cpp
        fx_color.h
        fx_curve.cpp
        fx_curve.h
        fx_defs.h
        fx_draw_buffers.cpp
        fx_draw_buffers.h
        fx_emission_source.cpp
        fx_emission_source.h
        fx_factory.cpp
        fx_info.cpp
        fx_info.h
        fx_manager.cpp
        fx_manager.h
        fx_math.cpp
        fx_math.h
        fx_name.h
        fx_particle_system.cpp
        fx_particle_system.h
        fx_rect.h
        fx_renderer.cpp
        fx_renderer.h
        fx_texture_factory.cpp
        fx_texture_name.h
        fx_variant_name.h
        fx_vec.cpp
        fx_vec.h
        fx_view_manager.cpp
        fx_view_manager.h
        game.cpp
        game.h
        game_config.cpp
        game_config.h
        game_event.h
        game_info.cpp
        game_info.h
        game_save_type.h
        game_time.cpp
        game_time.h
        gender.cpp
        gender.h
        gui_builder.cpp
        gui_builder.h
        gui_elem.cpp
        gui_elem.h
        gzstream.cpp
        gzstream.h
        hashing.h
        highscores.cpp
        highscores.h
        immigrant_auto_state.h
        immigrant_info.cpp
        immigrant_info.h
        immigration.cpp
        immigration.h
        indexed_vector.h
        inhabitants_info.cpp
        inhabitants_info.h
        input_queue.cpp
        input_queue.h
        intrinsic_attack.cpp
        intrinsic_attack.h
        inventory.cpp
        inventory.h
        ioapi.cpp
        ioapi.h
        item.cpp
        item.h
        item_action.h
        item_attributes.cpp
        item_attributes.h
        item_class.h
        item_counts.h
        item_factory.cpp
        item_factory.h
        item_index.cpp
        item_index.h
        item_list.cpp
        item_list.h
        item_prefix.cpp
        item_prefix.h
        item_type.cpp
        item_type.h
        item_upgrade_info.cpp
        item_upgrade_info.h
        keeper_creature_info.h
        keybinding.h
        keybinding_map.cpp
        keybinding_map.h
        key_verifier.cpp
        key_verifier.h
        known_tiles.cpp
        known_tiles.h
        lasting_effect.cpp
        lasting_effect.h
        level.cpp
        level.h
        level_builder.cpp
        level_builder.h
        level_maker.cpp
        level_maker.h
        luxury_info.h
        main.cpp
        main_loop.cpp
        main_loop.h
        map_gui.cpp
        map_gui.h
        map_layout.cpp
        map_layout.h
        map_memory.cpp
        map_memory.h
        message_buffer.h
        message_generator.cpp
        message_generator.h
        minimap_gui.cpp
        minimap_gui.h
        minion_activity.cpp
        minion_activity.h
        minion_activity_map.cpp
        minion_activity_map.h
        minion_controller.cpp
        minion_controller.h
        minion_equipment.cpp
        minion_equipment.h
        minion_trait.cpp
        minion_trait.h
        miniunz.cpp
        miniunz.h
        model.cpp
        model.h
        model_builder.cpp
        model_builder.h
        monster.cpp
        monster.h
        monster_ai.cpp
        monster_ai.h
        move_info.cpp
        move_info.h
        movement_info.cpp
        movement_info.h
        movement_set.cpp
        movement_set.h
        movement_type.cpp
        movement_type.h
        msg_type.h
        music.cpp
        music.h
        my_containers.h
        name_generator.cpp
        name_generator.h
        navigation_flags.cpp
        navigation_flags.h
        opengl.cpp
        opengl.h
        options.cpp
        options.h
        owner_pointer.h
        parse_game.cpp
        parse_game.h
        player.cpp
        player.h
        player_control.cpp
        player_control.h
        player_message.cpp
        player_message.h
        player_role.cpp
        player_role.h
        poison_gas.cpp
        poison_gas.h
        portals.cpp
        portals.h
        position.cpp
        position.h
        position_map.cpp
        position_map.h
        position_matching.cpp
        position_matching.h
        pretty_archive.h
        pretty_printing.cpp
        pretty_printing.h
        profiler.h
        progress.cpp
        progress.h
        progress_meter.cpp
        progress_meter.h
        quarters.cpp
        quarters.h
        ranged_weapon.cpp
        ranged_weapon.h
        read_write_array.h
        renderable.cpp
        renderable.h
        renderer.cpp
        renderer.h
        resource_counts.cpp
        resource_counts.h
        resource_id.h
        resource_info.h
        retired_games.cpp
        retired_games.h
        roof_support.cpp
        roof_support.h
        save_file_info.h
        saved_game_info.cpp
        saved_game_info.h
        scroll_position.cpp
        scroll_position.h
        sdl.h
        sdl_event_generator.cpp
        sdl_event_generator.h
        sectors.cpp
        sectors.h
        serialization.cpp
        serialization.h
        serialize_optional.h
        settlement_info.h
        shortest_path.cpp
        shortest_path.h
        singleton.cpp
        singleton.h
        skill.cpp
        skill.h
        sokoban_input.cpp
        sokoban_input.h
        sound.cpp
        sound.h
        sound_library.cpp
        sound_library.h
        special_trait.cpp
        special_trait.h
        spectator.cpp
        spectator.h
        spell.cpp
        spell.h
        spell_id.h
        spell_map.cpp
        spell_map.h
        square.cpp
        square.h
        square_array.cpp
        square_array.h
        stack_printer.cpp
        stack_printer.h
        stair_key.cpp
        stair_key.h
        statistics.cpp
        statistics.h
        stb_truetype.cpp
        stb_truetype.h
        stdafx.h
        storage_id.h
        storage_info.h
        sunlight_info.cpp
        sunlight_info.h
        task.cpp
        task.h
        task_callback.h
        task_map.cpp
        task_map.h
        team_member_action.cpp
        team_member_action.h
        team_order.cpp
        team_order.h
        technology.cpp
        technology.h
        territory.cpp
        territory.h
        test.cpp
        test.h
        text_serialization.h
        texture.cpp
        texture.h
        texture_id.h
        tile.cpp
        tile.h
        tile_paths.cpp
        tile_paths.h
        tileset.cpp
        tileset.h
        time_queue.cpp
        time_queue.h
        tribe.cpp
        tribe.h
        tribe_alignment.cpp
        tribe_alignment.h
        tutorial.cpp
        tutorial.h
        tutorial_highlight.h
        tutorial_state.h
        unique_entity.cpp
        unique_entity.h
        unknown_locations.cpp
        unknown_locations.h
        user_input.h
        util.cpp
        util.h
        unzip.cpp
        unzip.h
        variant_serialize.cpp
        version.h
        view.cpp
        view.h
        view_id.cpp
        view_id.h
        view_index.cpp
        view_index.h
        view_layer.h
        view_object.cpp
        view_object.h
        view_object_action.cpp
        view_object_action.h
        view_object_modifier.h
        village_action.h
        village_behaviour.cpp
        village_behaviour.h
        village_control.cpp
        village_control.h
        villain_type.cpp
        villain_type.h
        visibility_map.cpp
        visibility_map.h
        vision.cpp
        vision.h
        vision_id.h
        weapon_info.h
        weapon_info.cpp
        window_view.cpp
        window_view.h
        workshop_item.cpp
        workshop_item.h
        workshop_type.h
        workshops.cpp
        workshops.h
        z_level_info.h
        zones.cpp
        zones.h)

add_executable(keeper ${SOURCE_FILES})
#cotire(keeper)

set_target_properties(keeper PROPERTIES
        CXX_STANDARD 14
        CXX_EXTENSIONS ON)

#message(WARNING "CMAKE_SOURCE_DIR  = '${CMAKE_SOURCE_DIR}'")
target_include_directories(keeper PRIVATE
        ${CMAKE_SOURCE_DIR}
        ${CMAKE_SOURCE_DIR}/extern
        Boost::boost
        ${SDL2_INCLUDE_DIRS}/..
        ${SDL2_IMAGE_INCLUDE_DIRS}
        ${OPENAL_INCLUDE_DIR}
        ${OPENGL_INCLUDE_DIR}
        ${VORBIS_INCLUDE_DIR}
        ${VORBISFILE_INCLUDE_DIR}
        ${CURL_INCLUDE_DIR}
        )

target_link_libraries(keeper
        ${SDL2_LIBRARIES} ${SDL2_IMAGE_LIBRARIES}
        ${OPENAL_LIBRARY}
        Boost::thread
        Boost::chrono
        ${OPENAL_LIBRARIES}
        ${OPENGL_LIBRARIES}
        ${VORBIS_LIBRARY}
        ${VORBISFILE_LIBRARY}
        ${OGG_LIBRARIES}
        ${CURL_LIBRARIES}
        Threads::Threads
        ZLIB::ZLIB
        )

#message(WARNING VORBISFILE_LIBRARY=${VORBISFILE_LIBRARY})
# or set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} ...)?
target_compile_options(keeper PRIVATE
        -Wall
        -Wno-sign-compare
        -Wno-unused-variable
        -Wno-shift-count-overflow
        -Wno-tautological-constant-out-of-range-compare
        -Wno-mismatched-tags
        -ftemplate-depth=512
        -Wno-implicit-conversion-floating-point-to-bool 
        -Wno-string-conversion 
        -Wno-bool-conversion 
        -ftemplate-backtrace-limit=0
        )

if (DATA_DIR)
    target_compile_definitions(keeper PRIVATE -DDATA_DIR="$(DATA_DIR)")
endif()
if (USER_DIR)
    target_compile_definitions(keeper PRIVATE -DUSER_DIR="$(USER_DIR)")
endif()
if (ENABLE_LOCAL_USER_DIR)
    target_compile_definitions(keeper PRIVATE DENABLE_LOCAL_USER_DIR)
endif()
if (SANITIZE)
    set (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fno-omit-frame-pointer -fsanitize=address")
    set (CMAKE_LINKER_FLAGS_DEBUG "${CMAKE_LINKER_FLAGS_DEBUG} -fno-omit-frame-pointer -fsanitize=address")
endif()
if (APPLE)
    target_compile_definitions(keeper PRIVATE -DOSX)
    target_compile_options(keeper PRIVATE -stdlib=libc++ -mmacosx-version-min=10.7)
endif()
